name: Pipeline

on: [push]

env:
  BUILD_TYPE: Release

jobs:
  construccion:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Construir
      working-directory: ${{github.workspace}}
      shell: bash
      run: ./scripts/build.sh -t

    - name: Pruebas
      working-directory: ${{github.workspace}}
      shell: bash
      run: ./scripts/test.sh -nb

  publicar-documentacion:
    runs-on: ubuntu-latest
    needs: construccion
    steps:
    - uses: actions/checkout@v2

    - name: Generar configuracion
      working-directory: ${{github.workspace}}
      shell: bash
      run: |
        chmod +x ./scripts/generar-documentacion.sh
        ./scripts/generar-documentacion.sh

    - name: Publica en Github Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./documentacion

  versionado:
    runs-on: ubuntu-latest
    needs: construccion
    env:
      MENSAJE_COMMIT: ${{ github.event.head_commit.message }}
    if: "startsWith(github.event.head_commit.message, '[MAYOR]') || startsWith(github.event.head_commit.message, '[MINOR]') || startsWith(github.event.head_commit.message, '[PATCH]')"
    steps:
      - uses: actions/checkout@v2
      - name: Generar version
        id: genera_version
        working-directory: ${{github.workspace}}
        shell: bash
        run: |
          chmod +x ./scripts/versionar.sh ./scripts/liberar-version.sh
          ./scripts/liberar-version.sh "${MENSAJE_COMMIT}"
          echo "::set-output name=version::$(cat version)"
    outputs:
      version: ${{ steps.genera_version.outputs.version }}

  publicacion:
    runs-on: ubuntu-latest
    needs: versionado
    steps:
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Configurar python
        uses: actions/setup-python@v2

      - name: Cambia a master
        uses: actions/checkout@v2
        with:
          ref: 'master'

      - name: Install PlatformIO
        run: |
          chmod +x ./scripts/instalar-platformio.sh
          ./scripts/instalar-platformio.sh

      - name: Genera comprimido para platformio
        env:
          PLATFORMIO_AUTH_TOKEN: ${{ secrets.PLATFORMIO_TOKEN }}
          version: ${{ needs.versionado.outputs.version }}
        run: |
          echo "version $version"
          chmod +x ./scripts/generar-paquete-platformio.sh && ./scripts/generar-paquete-platformio.sh

      - name: Crea borrador de publicaci√≥n
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: crear_publicacion
        uses: actions/create-release@v1
        with:
          tag_name: ${{ needs.versionado.outputs.version }}
          release_name: ${{ needs.versionado.outputs.version }}
          draft: true
          prerelease: false

      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.crear_publicacion.outputs.upload_url }}
          asset_path: ./Chil-${{ needs.versionado.outputs.version }}.tar.gz
          asset_name: Chil-${{ needs.versionado.outputs.version }}.tar.gz
          asset_content_type: application/gzip

      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.crear_publicacion.outputs.id }}